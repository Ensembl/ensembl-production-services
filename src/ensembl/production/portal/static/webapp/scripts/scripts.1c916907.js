"use strict";var app=angular.module("ProdSrvApp",["app.config","ngTagsInput","ngRoute","mgcrea.ngStrap","ngSanitize"],["$interpolateProvider",function(e){e.startSymbol("{[{"),e.endSymbol("}]}")}]);app.config(["$httpProvider",function(e){e.defaults.headers.get||(e.defaults.headers.get={}),e.defaults.headers.get["If-Modified-Since"]="Mon, 26 Jul 1997 05:00:00 GMT",e.defaults.headers.get["Cache-Control"]="no-cache",e.defaults.headers.get.Pragma="no-cache"}]),app.config(["$routeProvider",function(e){e.when("/hc_submit",{templateUrl:"/views/hc_submit.html",controller:"HCSubmitCtrl"}).when("/hc_result",{templateUrl:"/views/hc_result.html",controller:"HCResultCtrl"}).when("/hc_result/:jobIdParam",{templateUrl:"/views/hc_result.html",controller:"HCResultCtrl"}).when("/database_server_status",{templateUrl:"/views/database_server_status.html",controller:"DatabaseServerStatusCtrl"}).when("/database_server_status/:serverParam",{templateUrl:"/views/database_server_status.html",controller:"DatabaseServerStatusCtrl"}).when("/database_server_size",{templateUrl:"/views/database_server_size.html",controller:"DatabaseServerSizeCtrl"}).when("/hc_list",{templateUrl:"/views/hc_list.html",controller:"HCListCtrl"}).when("/copy_submit",{templateUrl:"/views/copy_submit.html",controller:"CopySubmitCtrl"}).when("/copy_result",{templateUrl:"/views/copy_result.html",controller:"CopyResultCtrl"}).when("/copy_result/:jobIdParam",{templateUrl:"/views/copy_result.html",controller:"CopyResultCtrl"}).when("/copy_list",{templateUrl:"/views/copy_list.html",controller:"CopyListCtrl"}).when("/database_handover_submit",{templateUrl:"/views/database_handover_submit.html",controller:"HandoverSubmitCtrl"}).when("/database_handover_result",{templateUrl:"/views/database_handover_result.html",controller:"HandoverResultCtrl"}).when("/database_handover_result/:handoverTokenParam",{templateUrl:"/views/database_handover_result.html",controller:"HandoverResultCtrl"}).when("/database_handover_list",{templateUrl:"/views/database_handover_list.html",controller:"HandoverListCtrl"}).when("/help",{templateUrl:"/views/help.html"}).when("/",{templateUrl:"/views/homepage.html",controller:"HomepageCtrl"})}]),app.controller("mainController",["$scope","CONFIG",function(e,t){e.websiteName=t.FLASK_APP,e.app_path=t.FLASK_PATH}]),app.factory("editjob",function(){var t=null;return{set:function(e){t=e},get:function(){return t}}}),app.factory("hidepassword",function(){return{hide:function(e){var t=new RegExp("^(mysql://){1}(\\w+){1}(:)?(.+)?(@){1}(.+){1}(:){1}(\\d+){1}(/){1}(.+)?$").exec(e);return null!==t&&void 0!==t[4]?e.replace(t[4],"xxxxx"):e}}}),angular.module("ProdSrvApp").controller("HCListCtrl",["$scope","$http","CONFIG","$filter","hidepassword",function(a,o,l,e,t){var s=e("filter");a.hidePassword=function(e){return t.hide(e)},a.sortType="id",a.sortReverse=!0,a.searchFilter="",a.running=!1,a.loadJobs=function(){var e=l.HC_SRV_URL+"jobs";a.running=!0,o.get(e).then(function(e){a.jobs=e.data,a.running=!1},function(e){window.alert("Could not retrieve jobs: "+e.data.error),console.log(e),a.running=!1})},a.loadJobs(),a.refresh=function(){a.jobs=null,a.loadJobs()},a.deleteJobs=function(){angular.forEach(a.jobs,function(e){if(e.Selected&&null!==e.id&&void 0!==e.id){var t=l.HC_SRV_URL+"jobs/"+e.id;a.running=!0,o.delete(t).then(function(){a.running=!1},function(e){window.alert("Could not delete job: "+e.data.error),console.log(e),a.running=!1})}}),a.refresh()},a.ReSubmitJobs=function(){angular.forEach(a.jobs,function(e){if(e.Selected&&null!==e.id&&void 0!==e.id){var t={db_uri:e.input.db_uri};null!==e.input.staging_uri&&""!==e.input.staging_uri&&(t.staging_uri=e.input.staging_uri),null!==e.input.live_uri&&""!==e.input.live_uri&&(t.live_uri=e.input.live_uri),null!==e.input.production_uri&&""!==e.input.production_uri&&(t.production_uri=e.input.production_uri),null!==e.input.compara_uri&&""!==e.input.compara_uri&&(t.compara_uri=e.input.compara_uri),null!==e.input.hc_names&&(t.hc_names=e.input.hc_names),null!==e.input.hc_groups&&(t.hc_groups=e.input.hc_groups),null!==e.input.data_files_path&&(t.data_files_path=e.input.data_files_path),null!==e.input.tag&&(t.tag=e.input.tag),null!==e.input.email&&""!==e.input.email&&(t.email=e.input.email);var s=l.HC_SRV_URL+"jobs";o.post(s,t).then(function(e){window.alert("Job submitted with ID "+e.data.job_id)},function(e){window.alert("Could not submit job: "+e.data.error),console.log(e),a.running=!1})}}),a.refresh()},a.checkAll=function(){var e=s(a.jobs,a.searchFilter);angular.forEach(e,function(e){e.Selected=a.selectAll})}}]),angular.module("ProdSrvApp").controller("HCResultCtrl",["$scope","$http","$routeParams","CONFIG","$location","editjob","hidepassword",function(t,s,e,a,o,l,r){t.running=!1,t.hidePassword=function(e){return r.hide(e)};var n=new RegExp("^(\\d+){1}$");t.Hide="",t.getResult=function(){if((t.jobResult=null)!==t.jobId&&void 0!==t.jobId&&n.test(t.jobId)){var e=a.HC_SRV_URL+"jobs/"+t.jobId;t.running=!0,s.get(e).then(function(e){t.jobResult=e.data,t.running=!1,"failed"===e.data.status&&t.getFailure()},function(e){window.alert("Could not get result for job: "+e.data.error),console.log(e),t.running=!1})}},t.getFailure=function(){if(null!==t.jobId&&void 0!==t.jobId&&n.test(t.jobId)){var e=a.HC_SRV_URL+"jobs/"+t.jobId+"?format=failures";t.running=!0,s.get(e).then(function(e){t.jobMsgs=e.data,t.running=!1},function(e){window.alert("Could not get job failure: "+e.data.error),console.log(e),t.running=!1})}},t.deleteJob=function(){if(null!==t.jobId&&void 0!==t.jobId&&n.test(t.jobId)){var e=a.HC_SRV_URL+"jobs/"+t.jobId;t.running=!0,s.delete(e).then(function(){t.jobResult=null,t.jobId=null,t.running=!1},function(e){window.alert("Could not delete job: "+e.data.error),console.log(e),t.running=!1})}},t.refresh=function(){t.getResult()},t.toggle=function(){t.Hide=!t.Hide},t.EditReSubmitJob=function(){l.set(t.jobResult.input),o.url("/hc_submit")},null!==e.jobIdParam&&void 0!==e.jobIdParam&&(t.jobId=e.jobIdParam,t.getResult())}]),angular.module("ProdSrvApp").controller("HCSubmitCtrl",["$scope","$http","CONFIG","$location","editjob","hidepassword",function(l,r,n,i,e,t){if(l.hidePassword=function(e){return t.hide(e)},l.jobdata=e.get(),null===l.jobdata||""===l.jobdata)l.staging_uri=n.STAGING_URI,l.production_uri=n.PROD_URI,l.compara_uri=n.COMPARA_URI,l.live_uri=n.LIVE_URI,l.data_files_path=n.DATA_FILES_PATH;else{var s=l.jobdata.db_uri.split("/");l.dbUri=s[0]+"/"+s[1]+"/"+s[2]+"/",l.dbName=s[3],l.hcNames=l.jobdata.hc_names,l.hcGroups=l.jobdata.hc_groups,l.data_files_path=l.jobdata.data_files_path,l.email=l.jobdata.email,l.staging_uri=l.jobdata.staging_uri,l.production_uri=l.jobdata.production_uri,l.compara_uri=l.jobdata.compara_uri,l.live_uri=l.jobdata.live_uri,l.tag=l.jobdata.tag}l.getUris=function(e){if(null===e||""===e||null===l.dbUri||""===l.dbUri)return[];var t=n.DB_SRV_URL+"servers/"+n.URI_USER+"?query="+e;return r.get(t).then(function(e){return e.data})},l.getDbs=function(e){if(null===e||""===e||null===l.dbUri||""===l.dbUri)return[];var t=n.DB_SRV_URL+"databases?query="+e+"&db_uri="+l.dbUri;return r.get(t).then(function(e){return e.data})},l.getHcNames=function(e){var t=n.HC_SRV_URL+"healthchecks/tests?query="+e;return r.get(t).then(function(e){return e.data})},l.getHcGroups=function(e){var t=n.HC_SRV_URL+"healthchecks/groups?query="+e;return r.get(t).then(function(e){return e.data})},l.submitJob=function(){l.jobResult=null,l.jobId=null;var e=new RegExp("^(mysql://){1}(\\w+){1}(:)?(.+)?(@){1}(.+){1}(:){1}(\\d+){1}(/){1}$"),t=new RegExp("^(mysql://){1}(\\w+){1}(:)?(.+)?(@){1}(.+){1}(:){1}(\\d+){1}(/){1}(.+){1}$"),s=new RegExp("^(.+){1}(@){1}(.+){1}");if(null!==l.dbUri&&""!==l.dbUri)if(e.test(l.dbUri))if(null!==l.dbName&&""!==l.dbName){var a={db_uri:l.dbUri+l.dbName};if(null!==l.staging_uri&&""!==l.staging_uri&&(a.staging_uri=l.staging_uri),e.test(l.staging_uri))if(null!==l.live_uri&&""!==l.live_uri&&(a.live_uri=l.live_uri),e.test(l.live_uri))if(null!==l.production_uri&&""!==l.production_uri&&(a.production_uri=l.production_uri),t.test(l.production_uri))if(null!==l.compara_uri&&""!==l.compara_uri&&(a.compara_uri=l.compara_uri),t.test(l.compara_uri)){if(null!==l.hcNames&&(a.hc_names=l.hcNames),null!==l.hcGroups&&(a.hc_groups=l.hcGroups),null!==l.data_files_path&&""!==l.data_files_path&&(a.data_files_path=l.data_files_path),null!==l.tag&&(a.tag=l.tag),null!==l.email&&void 0!==l.email){if(!s.test(l.email))return void window.alert("Email should follow the pattern john.doe@ebi.ac.uk");a.email=l.email}if(null!==a.hc_names&&void 0!==a.hc_names&&0!==a.hc_names.length||null!==a.hc_groups&&void 0!==a.hc_groups&&0!==a.hc_groups.length){a.result_url=i.$$protocol+"://"+i.$$host+":"+i.$$port+"/#!/hc_result/";var o=n.HC_SRV_URL+"jobs";r.post(o,a).then(function(e){!0===l.keepValues?window.alert("Job submitted with ID "+e.data.job_id):(l.jobId=e.data.job_id,l.dbUri=null,l.dbName=null,l.hcNames=null,l.hcGroups=null,l.tag=null,i.url("/hc_result/"+l.jobId))},function(e){window.alert("Could not submit job: "+e.data.error),console.log(e),l.running=!1})}else window.alert("Either HC names or groups names are required")}else window.alert("Compara URI should follow this pattern  mysql://user(:pass)@server:port/compara_db_name ");else window.alert("Production URI should follow this pattern  mysql://user(:pass)@server:port/prod_db_name ");else window.alert("Live URI should follow this pattern  mysql://user(:pass)@server:port/ ");else window.alert("Staging URI should follow this pattern  mysql://user(:pass)@server:port/ ")}else window.alert("DB name required");else window.alert("DB URI should follow this pattern  mysql://user(:pass)@server:port/ ");else window.alert("DB URI required")}}]),angular.module("ProdSrvApp").controller("DatabaseServerStatusCtrl",["$scope","$http","$routeParams","CONFIG",function(s,a,e,o){s.running=!1,s.getStatus=function(){if((s.serverStatus=null)!==s.ServerName&&void 0!==s.ServerName){var e=s.splitUri(s.ServerName),t=o.DB_SRV_URL+"hosts/"+e;s.running=!0,a.get(t).then(function(e){s.serverStatus=e.data,s.running=!1},function(e){s.running=!1,window.alert("Could not get status for server: "+e.data.error),console.log(e)})}},s.getServerNames=function(e){if(null===e||""===e||null===s.ServerName||""===s.ServerName)return[];var t=o.DB_SRV_URL+"servers/"+o.URI_USER+"?query="+e;return a.get(t).then(function(e){return e.data})},s.splitUri=function(e){return new RegExp("^(mysql://){1}(.+){1}(:.+){0,1}(@){1}(.+){1}(:){1}(\\d+){1}(/){1}$").test(e)&&(e=e.split("@")[1].split(":")[0]),e},null!==e.serverParam&&void 0!==e.serverParam&&(s.serverName=e.serverParam,s.getStatus())}]),angular.module("ProdSrvApp").controller("DatabaseServerSizeCtrl",["$scope","$http","CONFIG",function(s,a,o){s.running=!1,s.dirName="/instances",s.getDatabaseSize=function(){if((s.databaseSize=null)!==s.ServerName&&void 0!==s.ServerName){null!==s.dbName&&void 0!==s.dbName||(s.dbName=".");var e=o.DB_SRV_URL+"databases/sizes?db_uri="+s.ServerName+"&query="+s.dbName+"&dir_name="+s.dirName;s.running=!0,a.get(e).then(function(e){var t=e.data;s.databaseSize=[],angular.forEach(t,function(e,t){s.databaseSize.push({key:t,size:e})}),s.running=!1},function(e){s.running=!1,window.alert("Could not get database size for server: "+e.data.error),console.log(e)})}},s.getServerNames=function(e){if(null===e||""===e||null===s.ServerName||""===s.ServerName)return[];var t=o.DB_SRV_URL+"servers/"+o.URI_USER+"?query="+e;return a.get(t).then(function(e){return e.data})},s.getDbs=function(e){if(null===e||""===e||null===s.ServerName||""===s.ServerName)return[];var t=o.DB_SRV_URL+"databases?query="+e+"&db_uri="+s.ServerName;return a.get(t).then(function(e){return e.data})},s.formatBytes=function(e,t,s){if(0===e)return"0 Bytes";var a=s?1024:1e3,o=1024==a?["MiB","GiB","TiB","PiB","EiB","ZiB","YiB"]:["MB","GB","TB","PB","EB","ZB","YB"],l=Math.floor(Math.log(e)/Math.log(a));return parseFloat((e/Math.pow(a,l)).toFixed(t||0))+" "+o[l]}}]),angular.module("ProdSrvApp").controller("CopySubmitCtrl",["$scope","$http","CONFIG","$location","editjob","hidepassword",function(o,l,r,n,e,t){if(o.displayOptions=!1,o.hidePassword=function(e){return t.hide(e)},o.jobdata=e.get(),null!==o.jobdata&&""!==o.jobdata){var s=o.jobdata.source_db_uri.split("/");o.SourcedbUri=s[0]+"/"+s[1]+"/"+s[2]+"/",o.SourcedbName=s[3];var a=o.jobdata.target_db_uri.split("/");o.TargetdbUri=a[0]+"/"+a[1]+"/"+a[2]+"/",o.TargetdbName=a[3],o.only_tables=o.jobdata.only_tables,o.skip_tables=o.jobdata.skip_tables,o.update=o.jobdata.update,o.drop=o.jobdata.drop,o.convert_innodb=o.jobdata.convert_innodb,o.email=o.jobdata.email}o.getSourceCopyUris=function(e){if(null===e||""===e||null===o.SourcedbUri||""===o.SourcedbUri)return[];var t=r.DB_SRV_URL+"servers/"+r.COPY_SOURCE_USER+"?query="+e;return l.get(t).then(function(e){return e.data})},o.getSourceCopyDbs=function(e){if(null===e||""===e||null===o.SourcedbUri||""===o.SourcedbUri)return[];var t=r.DB_SRV_URL+"databases?query="+e+"&db_uri="+o.SourcedbUri;return l.get(t).then(function(e){return null!==o.jobdata&&""!==o.jobdata||(o.TargetdbName=e.data),e.data})},o.getTargetCopyUris=function(e){if(null===e||""===e||null===o.TargetdbUri||""===o.TargetdbUri)return[];var t=r.DB_SRV_URL+"servers/"+r.COPY_TARGET_USER+"?query="+e;return l.get(t).then(function(e){return e.data})},o.displayAdvOptions=function(){o.displayOptions=!o.displayOptions},o.submitCopyJob=function(){o.jobResult=null,o.jobId=null;var e=new RegExp("^(mysql://){1}(\\w+){1}(:)?(.+)?(@){1}(.+){1}(:){1}(\\d+){1}(/){1}$"),t=new RegExp("^(.+){1}(@){1}(.+){1}");if(null!==o.SourcedbUri&&""!==o.SourcedbUri)if(e.test(o.SourcedbUri))if(null!==o.TargetdbUri&&""!==o.TargetdbUri)if(e.test(o.TargetdbUri))if(null!==o.SourcedbName&&""!==o.SourcedbName)if(null!==o.TargetdbName&&""!==o.TargetdbName){var s={source_db_uri:o.SourcedbUri+o.SourcedbName};if(s.target_db_uri=o.TargetdbUri+o.TargetdbName,null!==o.only_tables&&""!==o.only_tables){if(!new RegExp("^([^ ]+){1}$").test(o.only_tables)&&!new RegExp("^([^ ]+){1}(,){1}([^ ]+){1}$").test(o.only_tables))return void window.alert("List of tables need to be comma separated, eg: table1,table2,table3");s.only_tables=o.only_tables}if(null!==o.skip_tables&&""!==o.skip_tables){if(!new RegExp("^([^ ]+){1}$").test(o.skip_tables)&&!new RegExp("^([^ ]+){1}(,){1}([^ ]+){1}$").test(o.skip_tables))return void window.alert("List of tables need to be comma separated, eg: table1,table2,table3");s.skip_tables=o.skip_tables}if(null!==o.update&&""!==o.update&&(s.update=o.update),null!==o.drop&&""!==o.drop&&(s.drop=o.drop),null!==o.convert_innodb&&""!==o.convert_innodb&&(s.convert_innodb=o.convert_innodb),null!==o.email&&void 0!==o.email){if(!t.test(o.email))return void window.alert("Email should follow the pattern john.doe@ebi.ac.uk");s.email=o.email}s.result_url=n.$$protocol+"://"+n.$$host+":"+n.$$port+"/#!/copy_result/";var a=r.DB_SRV_URL+"jobs";l.post(a,s).then(function(e){!0===o.keepValues?window.alert("Job submitted with ID "+e.data.job_id):(o.jobId=e.data.job_id,o.source_db_uri=null,o.target_db_uri=null,n.url("/copy_result/"+o.jobId))},function(e){window.alert("Could not submit job: "+e.data.error),console.log(e),o.running=!1})}else window.alert("Target DB name required");else window.alert("Source DB name required");else window.alert("Target URI should follow this pattern mysql://user:pass@server:port/ ");else window.alert("Target DB URI required");else window.alert("Source URI should follow this pattern  mysql://user(:pass)@server:port/ ");else window.alert("Source DB URI required")}}]),angular.module("ProdSrvApp").controller("CopyResultCtrl",["$scope","$http","$routeParams","CONFIG","$location","editjob","hidepassword",function(t,s,e,a,o,l,r){t.running=!1,t.hidePassword=function(e){return r.hide(e)};var n=new RegExp("^(\\d+){1}$");t.getCopyResult=function(){if((t.jobResult=null)!==t.jobId&&void 0!==t.jobId&&n.test(t.jobId)){var e=a.DB_SRV_URL+"jobs/"+t.jobId;t.running=!0,s.get(e).then(function(e){t.jobResult=e.data,t.running=!1,"failed"===e.data.status&&t.getCopyFailure()},function(e){window.alert("Could not retrieve job: "+e.data.error),console.log(e),t.running=!1})}},t.getCopyFailure=function(){if(null!==t.jobId&&void 0!==t.jobId&&n.test(t.jobId)){var e=a.DB_SRV_URL+"jobs/"+t.jobId+"?format=failures";t.running=!0,s.get(e).then(function(e){t.jobMsg=e.data,t.running=!1},function(e){window.alert("Could not get job failures: "+e.data.error),console.log(e),t.running=!1})}},t.deleteCopyJob=function(){if(null!==t.jobId&&void 0!==t.jobId&&n.test(t.jobId)){var e=a.DB_SRV_URL+"jobs/"+t.jobId;t.running=!0,s.delete(e).then(function(){t.jobResult=null,t.jobId=null,t.running=!1},function(e){window.alert("Could not delete job: "+e.data.error),console.log(e),t.running=!1})}},t.stopCopy=function(){if(null!==t.jobId&&void 0!==t.jobId&&n.test(t.jobId)){window.alert("Stopping the database copy in progress, please wait");var e=a.DB_SRV_URL+"jobs/"+t.jobId+"?kill=1";t.running=!0,s.delete(e).then(function(){window.alert("Successfully stopped the database copy"),t.running=!1,t.jobResult=null,t.jobId=null},function(e){window.alert("Could not stop the database copy: "+e.data.error),console.log(e),t.running=!1})}},t.EditReSubmitJob=function(){l.set(t.jobResult.input),o.url("/copy_submit")},t.refresh=function(){t.getCopyResult()},null!==e.jobIdParam&&void 0!==e.jobIdParam&&(t.jobId=e.jobIdParam,t.getCopyResult())}]),angular.module("ProdSrvApp").controller("CopyListCtrl",["$scope","$http","CONFIG","$filter","hidepassword",function(a,o,l,e,t){var s=e("filter");a.hidePassword=function(e){return t.hide(e)},a.sortType="id",a.sortReverse=!0,a.searchFilter="",a.running=!1,a.loadCopyJobs=function(){var e=l.DB_SRV_URL+"jobs";a.running=!0,o.get(e).then(function(e){a.jobs=e.data,a.running=!1},function(e){window.alert("Could not retrieve jobs: "+e.data.error),console.log(e),a.running=!1})},a.loadCopyJobs(),a.refresh=function(){a.jobs=null,a.loadCopyJobs()},a.deleteJobs=function(){angular.forEach(a.jobs,function(e){if(e.Selected&&null!==e.id&&void 0!==e.id){var t=l.DB_SRV_URL+"jobs/"+e.id;a.running=!0,o.delete(t).then(function(){a.running=!1},function(e){window.alert("Could not delete job: "+e.data.error),console.log(e),a.running=!1})}}),a.refresh(),a.refresh()},a.ReSubmitJobs=function(){angular.forEach(a.jobs,function(e){if(e.Selected&&null!==e.id&&void 0!==e.id){var t={source_db_uri:e.input.source_db_uri};t.target_db_uri=e.input.target_db_uri,null!==e.input.only_tables&&""!==e.input.only_tables&&(t.only_tables=e.input.only_tables),null!==e.input.skip_tables&&""!==e.input.skip_tables&&(t.skip_tables=e.input.skip_tables),null!==e.input.update&&""!==e.input.update&&(t.update=e.input.update),null!==e.input.drop&&""!==e.input.drop&&(t.drop=e.input.drop),null!==e.input.convert_innodb&&""!==e.input.convert_innodb&&(t.convert_innodb=e.input.convert_innodb),null!==e.input.email&&""!==e.input.email&&(t.email=e.input.email);var s=l.DB_SRV_URL+"jobs";o.post(s,t).then(function(e){window.alert("Job submitted with ID "+e.data.job_id)},function(e){window.alert("Could not submit job: "+e.data.error),console.log(e),a.running=!1})}}),a.refresh(),a.refresh()},a.checkAll=function(){var e=s(a.jobs,a.searchFilter);angular.forEach(e,function(e){e.Selected=a.selectAll})}}]),angular.module("ProdSrvApp").controller("HandoverSubmitCtrl",["$scope","$http","CONFIG","$q","$location","editjob","hidepassword",function(o,l,r,e,n,t,s){if(o.displayOptions=!1,o.hidePassword=function(e){return s.hide(e)},o.app_path=r.FLASK_PATH,o.jobdata=t.get(),null!==o.jobdata&&""!==o.jobdata){var a=o.jobdata.src_uri.split("/");o.ServerUri=a[0]+"/"+a[1]+"/"+a[2]+"/",o.dbName=a[3],o.email=o.jobdata.contact,o.description=o.jobdata.comment,o.source=o.jobdata.source}o.getServerUris=function(e){if(null===e||""===e||null===o.ServerUri||""===o.ServerUri)return[];var t=r.DB_SRV_URL+"servers/"+r.COPY_SOURCE_USER+"?query="+e;return l.get(t).then(function(e){return e.data})},o.getDbs=function(e){if(null===e||""===e||null===o.ServerUri||""===o.ServerUri)return[];var t=r.DB_SRV_URL+"databases?query="+e+"&db_uri="+o.ServerUri;return l.get(t).then(function(e){return e.data})},o.submitDatabaseHandoverJob=function(){o.jobResult=null,o.jobId=null;var e=new RegExp("^(mysql://){1}(\\w+){1}(:)?(.+)?(@){1}(.+){1}(:){1}(\\d+){1}(/){1}$"),t=new RegExp("^(.+){1}(@){1}(.+){1}");if(null!==o.ServerUri&&""!==o.ServerUri)if(null!==o.email&&""!==o.email)if(null!==o.description&&""!==o.description)if(e.test(o.ServerUri))if(null!==o.dbName&&""!==o.dbName){var s={src_uri:o.ServerUri+o.dbName};if(t.test(o.email)){s.contact=o.email,s.comment=o.description,s.source="Handover";var a=r.HANDOVER_SRV_URL+"handovers";l.post(a,s).then(function(e){window.alert("Job submitted with handover token "+e.data),!0!==o.keepValues&&(o.handover_token=e.data,o.src_uri=null,o.contact=null,o.description=null,o.source=null,n.url("/database_handover_result/"+o.handover_token))},function(e){window.alert("Handover failed: "+e.data.error),console.log(e)})}else window.alert("Email should follow the pattern john.doe@ebi.ac.uk")}else window.alert("DB name required");else window.alert("Server URI should follow this pattern  mysql://user(:pass)@server:port/ ");else window.alert("Description required");else window.alert("Email required");else window.alert("Server URI required")}}]),angular.module("ProdSrvApp").controller("HandoverResultCtrl",["$scope","$http","$routeParams","CONFIG","$location","editjob","hidepassword",function(t,s,e,a,o,l,r){t.running=!1,t.hidePassword=function(e){return r.hide(e)},t.app_path=a.FLASK_PATH,t.getHandoverResult=function(){if((t.jobResult=null)!==t.handoverToken&&void 0!==t.handoverToken){var e=a.HANDOVER_SRV_URL+"handovers/"+t.handoverToken;t.running=!0,s.get(e).then(function(e){t.jobResult=e.data,t.running=!1},function(e){window.alert("Could not retrieve job result: "+e.data.error),console.log(e),t.running=!1})}},t.deleteHandoverJob=function(){if(null!==t.handoverToken&&void 0!==t.handoverToken){var e=a.HANDOVER_SRV_URL+"handovers/"+t.handoverToken;t.running=!0,s.delete(e).then(function(){t.jobResult=null,t.handoverToken=null,t.running=!1},function(e){window.alert("Could not delete job: "+e.data.error),console.log(e),t.running=!1})}},t.EditReSubmitJob=function(){l.set(t.jobResult[0]),o.url("/database_handover_submit")},t.refresh=function(){t.getHandoverResult()},null!==e.handoverTokenParam&&void 0!==e.handoverTokenParam&&(t.handoverToken=e.handoverTokenParam,t.getHandoverResult()),t.checkStatus=function(e){var t=new RegExp("^(.+)Handover(.+){1}successful$"),s=new RegExp("^(.+)failed(.+)$"),a=new RegExp("^(.+)problems(.+)$");return t.test(e)?"complete":s.test(e)||a.test(e)?"failed":"running"},t.urlify=function(e){return new RegExp("(.+)http://(.+)").test(e)?e.replace("http://127.0.0.1",o.$$protocol+"://"+o.$$host).replace(/(https?:\/\/[^\s]+)/g,function(e){return'<a href="'+e+'">'+e+"</a>"}):e}}]),angular.module("ProdSrvApp").controller("HandoverListCtrl",["$scope","$http","CONFIG","$filter","hidepassword",function(a,o,l,e,t){var s=e("filter");a.hidePassword=function(e){return t.hide(e)},a.app_path=l.FLASK_PATH,a.sortType="report_time",a.sortReverse=!0,a.searchFilter="",a.running=!1,a.loadHandoverJobs=function(){var e=l.HANDOVER_SRV_URL+"handovers/";a.running=!0,o.get(e).then(function(e){a.jobs=e.data,a.running=!1},function(e){window.alert("Could not retrieve jobs: "+e.data.error),console.log(e),a.running=!1})},a.loadHandoverJobs(),a.refresh=function(){a.jobs=null,a.loadHandoverJobs()},a.deleteJobs=function(){angular.forEach(a.jobs,function(e){if(e.Selected&&null!==e.handover_token&&void 0!==e.handover_token){var t=l.HANDOVER_SRV_URL+"handovers/"+e.handover_token;a.running=!0,o.delete(t).then(function(){a.running=!1},function(e){window.alert("Could not delete job:"+e.data.error),console.log(e),a.running=!1})}}),a.refresh(),a.refresh()},a.ReSubmitJobs=function(){angular.forEach(a.jobs,function(e){if(e.Selected&&null!==e.handover_token&&void 0!==e.handover_token){var t={src_uri:e.src_uri};null!==e.contact&&""!==e.contact&&(t.contact=e.contact),t.comment=e.comment,t.source="Handover";var s=l.HANDOVER_SRV_URL+"handovers/";o.post(s,t).then(function(e){window.alert("Job submitted with handover token "+e.data)},function(e){window.alert("Could not submit job"+e.data.error),console.log(e),a.running=!1})}}),a.refresh(),a.refresh()},a.checkStatus=function(e){var t=new RegExp("^(.+)Handover(.+){1}successful$"),s=new RegExp("^(.+)failed(.+)$"),a=new RegExp("^(.+)problems(.+)$");return t.test(e)?"complete":s.test(e)||a.test(e)?"failed":"running"},a.checkAll=function(){var e=s(a.jobs,a.searchFilter);angular.forEach(e,function(e){e.Selected=a.selectAll})}}]),angular.module("ProdSrvApp").controller("HomepageCtrl",["$scope","CONFIG",function(e,t){e.websiteName=t.FLASK_APP}]),angular.module("ProdSrvApp").run(["$templateCache",function(e){e.put("views/copy_list.html",'<div class="container-fluid"> <form class="form-inline"> <div class="col-sm-pull-5"> <button type="submit" class="btn btn-outline-secondary" ng-click="refresh()">Refresh</button> <button type="submit" class="btn btn-outline-secondary" ng-click="ReSubmitJobs()">Re-submit jobs</button> <button type="submit" class="btn btn-outline-secondary" ng-click="deleteJobs()">Delete jobs</button> </div> <div class="input-group col-md-4"> <input type="text" class="form-control" placeholder="Search DB Copy job" ng-model="searchDbCopyJob"> <span class="input-group-append"> <button class="btn btn-outline-secondary" type="button"> <i class="fa fa-search"></i> </button> </span> </div> </form> <table class="table table-bordered table-striped"> <thead> <tr> <th scope="col" title="ID"> <a href="#!/copy_list" ng-click="sortType = \'id\'; sortReverse = !sortReverse"> ID <span ng-show="sortType == \'id\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'id\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Date"> <a href="#!/copy_list" ng-click="sortType = \'date\'; sortReverse = !sortReverse"> Date <span ng-show="sortType == \'date\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'date\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="SourceDB"> <a href="#!/copy_list" ng-click="sortType = \'sourcedb\'; sortReverse = !sortReverse"> Source DB <span ng-show="sortType == \'sourcedb\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'sourcedb\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="TargetDB"> <a href="#!/copy_list" ng-click="sortType = \'targetdb\'; sortReverse = !sortReverse"> Target DB <span ng-show="sortType == \'targetdb\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'targetdb\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Status"> <a href="#!/copy_list" ng-click="sortType = \'status\'; sortReverse = !sortReverse"> Status <span ng-show="sortType == \'status\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'status\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Select"> <a href="#!/copy_list" ng-click="sortType = \'select\'; sortReverse = !sortReverse"> Select <span ng-show="sortType == \'select\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'select\' && sortReverse" class="fa fa-caret-up"></span> </a> <input type="checkbox" ng-model="selectAll" ng-click="checkAll()"> </th> </tr> </thead> <tbody> <tr ng-repeat="job in jobs | orderBy:sortType:sortReverse | filter:searchDbCopyJob"> <td><a href="#!/copy_result/{[{job.id}]}">{[{job.id}]}</a></td> <td>{[{ job.input.timestamp * 1000 | date:\'dd-MM-yyyy HH:mm\' }]}</td> <td>{[{ hidePassword(job.input.source_db_uri) }]}</td> <td>{[{ hidePassword(job.input.target_db_uri) }]}</td> <td>{[{ job.status }]}</td> <td><input type="checkbox" ng-model="job.Selected"></td> </tr> </tbody> </table> <span ng-show="running"> <span class="spinner-border spinner-grow-sm"></span> <text class="glyphicon-loading">Loading...</text> </span> </div> '),e.put("views/copy_result.html",'<div class="container-fluid"> <form class="form-inline"> <div class="col-sm-pull-5"> <button type="submit" class="btn btn-outline-secondary" ng-click="refresh()">Refresh</button> <button type="submit" class="btn btn-outline-secondary" ng-click="EditReSubmitJob()">Edit and Re-submit jobs</button> <button ng-show="jobResult.status == \'running\'" type="submit" class="btn btn-outline-secondary" ng-click="stopCopy()"> Cancel copy </button> <button ng-hide="jobResult.status == \'running\'" type="submit" class="btn btn-outline-secondary" ng-click="deleteCopyJob()">Delete job </button> </div> <div class="col-sm-7 form-row"> <label class="control-label custom-control-inline" for="job_id"> Job ID: </label> <input type="text" class="form-control" id="job_id" ng-model="jobId"> <button type="submit" class="btn btn-outline-secondary" ng-click="getCopyResult()">View</button> </div> </form> <form> <span ng-show="running"><i class="glyphicon glyphicon-refresh glyphicon-spin glyphicon-loading"></i> <text class="glyphicon-loading">Loading...</text> </span> <div class="results" ng-hide="jobResult == null"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Source DB:</div> </div> <div class="col-sm-10 tablevalue">{[{hidePassword(jobResult.input.source_db_uri)}]}</div> </div> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Target DB:</div> </div> <div class="col-sm-10 tablevalue">{[{hidePassword(jobResult.input.target_db_uri)}]}</div> </div> <div ng-hide="jobResult.status == \'failed\'"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Job status:</div> </div> <div class="col-sm-10 tablevalue {[{jobResult.status}]}">{[{jobResult.status}]}: {[{jobResult.progress.message}]} </div> </div> </div> <div ng-show="jobResult.status == \'failed\'"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Job status:</div> </div> <div class="col-sm-10 tablevalue {[{jobResult.status}]}">{[{jobResult.status}]}</div> </div> </div> <div ng-show="jobResult.status == \'running\'"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Progress:</div> </div> <div class="col-sm-10 tablevalue progress"> <div class="bar" style="width:{[{((jobResult.progress.complete / jobResult.progress.total) * 100)}]}%"> <span class="job-completed">{[{jobResult.progress.complete}]}/{[{jobResult.progress.total}]} tasks done</span> </div> </div> </div> </div> <div ng-hide="jobResult.output == null"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Copy took:</div> </div> <div class="col-sm-10 tablevalue {[{jobResult.output.runtime}]}">{[{jobResult.output.runtime}]} </div> </div> </div> <div ng-hide="jobResult.output == null"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Copy completed on:</div> </div> <div class="col-sm-10 tablevalue {[{jobResult.when_completed}]}">{[{jobResult.when_completed}]} </div> </div> </div> <div ng-show="jobResult.status == \'failed\'"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Copy failed with the following error:</div> </div> <div class="col-sm-10 tablevalue">{[{jobMsg.msg}]}</div> </div> </div> </div></form> </div>'),e.put("views/copy_submit.html",'<div class="container-fluid"> <form class="form-horizontal"> <div class="form-group"> <label class="col-sm-3 control-label" for="SourcedbUri"> Source server URI: </label> <div class="col-sm-9"> <input type="text" class="form-control" id="SourcedbUri" ng-model="SourcedbUri" bs-options="hidePassword(sourceuri) for sourceuri in getSourceCopyUris($viewValue)" placeholder="Enter Source URI, e.g: mysql://ensro@mysql-ens-general-dev-1:4484/" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-3 control-label" for="SourcedbName"> Source database: </label> <div class="col-sm-9"> <input type="text" class="form-control" id="SourcedbName" ng-model="SourcedbName" bs-options="SourcedbName for SourcedbName in getSourceCopyDbs($viewValue)" minlength="3" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-3 control-label" for="TargetdbUri"> Target server URI: </label> <div class="col-sm-9"> <input type="text" class="form-control" id="TargetdbUri" ng-model="TargetdbUri" bs-options="hidePassword(targeturi) for targeturi in getTargetCopyUris($viewValue)" placeholder="Enter Target URI, e.g: mysql://ensro@mysql-ens-general-dev-1:4484/" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-3 control-label" for="TargetdbName"> Target database: </label> <div class="col-sm-9"> <input type="text" class="form-control" id="TargetdbName" ng-model="TargetdbName" minlength="3"> </div> </div> <div class="form-group"> <label class="col-sm-3 control-label" for="email"> Email: </label> <div class="col-sm-9"> <input type="text" class="form-control" id="email" ng-model="email" minlength="10"> </div> </div> <div class="form-group row"> <div class="col-sm-2"> <div class="form-check"> <input class="form-check-input" type="checkbox" id="keepValues" ng-model="keepValues"> <label class="form-check-label" for="keeValues">Submit more</label> </div> </div> </div> <button type="button" class="btn btn-info" ng-click="displayAdvOptions()">Display advanced options</button> <div ng-show="displayOptions"> <div class="form-group"> <label class="col-sm-3 control-label" for="only_tables"> Only Tables (e.g: meta,analysis): </label> <div class="col-sm-9"> <input type="text" class="form-control" id="only_tables" ng-model="only_tables" bs-options="x for x in only_tables" minlength="3" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-3 control-label" for="skip_tables"> Skip Tables (e.g: meta,analysis): </label> <div class="col-sm-9"> <input type="text" class="form-control" id="skip_tables" ng-model="skip_tables" bs-options="x for x in skip_tables" minlength="3" bs-typeahead> </div> </div> <div class="form-group row"> <label class="col-sm-3 control-label" for="update"> Incremental update: </label> <div class="col-sm-pull-9"> <select ng-model="update" id="update"> <option value=""> </option><option value="0">No </option><option value="1">Yes </option></select> </div> </div> <div class="form-group row"> <label class="col-sm-3 control-label" for="drop"> Drop target database before copy: </label> <div class="col-sm-pull-9"> <select ng-model="drop" id="drop"> <option value=""> </option><option value="0">No </option><option value="1">Yes </option></select> </div> </div> <div class="form-group row"> <label class="col-sm-3 control-label" for="convert_innodb"> Convert InnoDB tables to MyISAM on target database: </label> <div class="col-sm-pull-9"> <select ng-model="convert_innodb" id="convert_innodb"> <option value=""> </option><option value="0">No </option><option value="1">Yes </option></select> </div> </div> </div> <div class="form-group row"> <div class="col-sm-pull-10"> <button type="submit" class="btn btn-outline-secondary pull-right" ng-click="submitCopyJob()">Submit </button> </div> </div> </form> </div>'),e.put("views/database_handover_list.html",'<div class="container-fluid"> <form class="form-inline"> <div> <button type="submit" class="btn btn-outline-secondary" ng-click="refresh()">Refresh</button> <button type="submit" class="btn btn-outline-secondary" ng-click="ReSubmitJobs()">Re-submit jobs</button> <button type="submit" class="btn btn-outline-secondary" ng-click="deleteJobs()">Delete jobs</button> </div> <div class="input-group col-md-4"> <input type="text" class="form-control" placeholder="Search Handover databases" ng-model="searchHandoverDatabase"> <span class="input-group-append"> <button class="btn btn-outline-secondary" type="button"> <i class="fa fa-search"></i> </button> </span> </div> </form> <table class="table table-bordered table-striped"> <thead> <tr> <th scope="col" title="Handover token"> <a href="#!/database_handover_list" ng-click="sortType = \'handover_token\'; sortReverse = !sortReverse"> Handover token <span ng-show="sortType == \'handover_token\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'handover_token\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Date"> <a href="#!/database_handover_list" ng-click="sortType = \'report_time\'; sortReverse = !sortReverse"> Date <span ng-show="sortType == \'report_time\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'report_time\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="DB"> <a href="#!/database_handover_list" ng-click="sortType = \'src_uri\'; sortReverse = !sortReverse"> DB <span ng-show="sortType == \'src_uri\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'src_uri\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Email"> <a href="#!/database_handover_list" ng-click="sortType = \'contact\'; sortReverse = !sortReverse"> Email <span ng-show="sortType == \'contact\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'contact\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Description"> <a href="#!/database_handover_list" ng-click="sortType = \'description\'; sortReverse = !sortReverse"> Description <span ng-show="sortType == \'description\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'description\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Status"> <a href="#!/database_handover_list" ng-click="sortType = \'status\'; sortReverse = !sortReverse"> Status <span ng-show="sortType == \'status\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'status\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Select"> <a href="#!/database_handover_list" ng-click="sortType = \'select\'; sortReverse = !sortReverse"> Select <span ng-show="sortType == \'select\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'select\' && sortReverse" class="fa fa-caret-up"></span> </a> <input type="checkbox" ng-model="selectAll" ng-click="checkAll()"> </th> </tr> </thead> <tbody> <tr ng-repeat="job in jobs | orderBy:sortType:sortReverse | filter:searchHandoverDatabase"> <td><a href="#!/database_handover_result/{[{job.handover_token}]}">{[{job.handover_token}]}</a></td> <td>{[{job.report_time | date:\'dd-MM-yyyy HH:mm\'}]}</td> <td>{[{job.src_uri}]}</td> <td>{[{job.contact}]}</td> <td>{[{job.comment}]}</td> <td>{[{checkStatus(job.current_message)}]}</td> <td><input type="checkbox" ng-model="job.Selected"></td> </tr> </tbody> </table> <span ng-show="running"> <span class="spinner-border spinner-grow-sm"></span> <text class="glyphicon-loading">Loading...</text> </span> </div> '),e.put("views/database_handover_result.html",'<div class="container-fluid"> <form class="form-inline"> <div class="col-sm-pull-5"> <button type="submit" class="btn btn-outline-secondary" ng-click="refresh()">Refresh</button> <button type="submit" class="btn btn-outline-secondary" ng-click="EditReSubmitJob()">Edit and Re-submit jobs</button> <button type="submit" class="btn btn-outline-secondary" ng-click="deleteHandoverJob()">Delete job</button> </div> </form> <form> <div> <label class="control-label" for="handover_token"> Handover token: </label> <input type="text" class="form-control" id="handover_token" ng-model="handoverToken"> <button type="submit" class="btn btn-outline-secondary" ng-click="getHandoverResult()">View</button> </div> </form> <form> <span ng-show="running"><i class="glyphicon glyphicon-refresh glyphicon-spin glyphicon-loading"></i> <text class="glyphicon-loading">Loading...</text> </span> <div class="results" ng-hide="jobResult == null"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">DB:</div> </div> <div class="col-sm-10 tablevalue">{[{hidePassword(jobResult[0].src_uri)}]}</div> </div> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Date:</div> </div> <div class="col-sm-10 tablevalue">{[{jobResult[0].report_time | date:\'dd-MM-yyyy HH:mm\'}]}</div> </div> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Email:</div> </div> <div class="col-sm-10 tablevalue">{[{jobResult[0].contact}]}</div> </div> <div ng-if="checkStatus(jobResult[0].message) == \'complete\'"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Job status:</div> </div> <div class="col-sm-10 tablevalue complete">{[{jobResult[0].message}]}</div> </div> </div> <div ng-if="checkStatus(jobResult[0].message) == \'failed\'"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Job status:</div> </div> <div class="col-sm-10 tablevalue failed" ng-bind-html="urlify(jobResult[0].message)"></div> </div> </div> <div ng-if="checkStatus(jobResult[0].message) == \'running\'"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Job status:</div> </div> <div class="col-sm-10 tablevalue running" ng-bind-html="urlify(jobResult[0].message)"></div> </div> </div> <div ng-if="checkStatus(jobResult[0].message) == \'running\'"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Progress:</div> </div> <div class="col-sm-10 tablevalue progress"> <div class="bar" style="width:{[{((jobResult[0].progress_complete / jobResult[0].progress_total) * 100)}]}%"> <span class="job-completed">{[{jobResult[0].progress_complete}]}/{[{jobResult[0].progress_total}]} tasks done</span> </div> </div> </div> </div></div></form> </div>'),e.put("views/database_handover_submit.html",'<div class="container-fluid"> <form class="form-horizontal"> <div class="form-group"> <label class="col-sm-2 control-label" for="ServerUri"> Database server URI: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="ServerUri" ng-model="ServerUri" bs-options="hidePassword(serveruri) for serveruri in getServerUris($viewValue)" placeholder="Enter Server URI, e.g: mysql://ensro@mysql-ens-general-dev-1:4484/" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="dbName"> Database: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="dbName" ng-model="dbName" bs-options="dbName for dbName in getDbs($viewValue)" minlength="3" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="email"> Email: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="email" ng-model="email" minlength="10"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="description"> Description: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="description" ng-model="description" md-maxlength="150" rows="2"> </div> </div> <div class="form-group row"> <div class="col-sm-2"> <div class="form-check"> <input class="form-check-input" type="checkbox" id="keepValues" ng-model="keepValues"> <label class="form-check-label" for="keeValues">Submit more</label> </div> </div> </div> <div class="form-group row"> <div class="col-sm-pull-10"> <button type="submit" class="btn btn-outline-secondary pull-right" ng-click="submitDatabaseHandoverJob()"> Submit </button> </div> </div> </form> </div> '),e.put("views/database_server_size.html",'<div class="container-fluid"> <form class="form-horizontal"> <div class="form-group"> <label class="col-sm-2 control-label" for="ServerName"> Server name: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="ServerName" ng-model="ServerName" bs-options="servername for servername in getServerNames($viewValue)" placeholder="Enter server name, e.g: mysql://ensro@mysql-ens-general-dev-1:4484/" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="dbName"> Database name: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="dbName" ng-model="dbName" bs-options="dbName for dbName in getDbs($viewValue)" minlength="1" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="dirName"> Server directory name: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="dirName" ng-model="dirName" md-maxlength="150" rows="2"> </div> </div> <button type="submit" class="btn btn-outline-secondary pull-right" ng-click="getDatabaseSize()">Submit</button> </form> <span ng-show="running"><i class="glyphicon glyphicon-refresh glyphicon-spin glyphicon-loading"></i> <text class="glyphicon-loading">Loading...</text> </span> <table class="table table-bordered table-striped" ng-hide="databaseSize == null"> <thead> <tr> <th scope="col" title="Name"> Database name </th> <th scope="col" title="Size"> Database size </th> </tr> </thead> <tbody> <tr ng-repeat="database in databaseSize | orderBy:\'size\':true "> <td>{[{database.key}]}</td> <td>{[{formatBytes(database.size,1)}]}</td> </tr> </tbody> </table>  </div> '),e.put("views/database_server_status.html",'<div class="container-fluid"> <form class="form-horizontal"> <div class="form-group"> <label class="col-sm-2 control-label" for="ServerName"> Server name: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="ServerName" ng-model="ServerName" bs-options="splitUri(servername) for servername in getServerNames($viewValue)" placeholder="Enter server name, e.g: mysql-ens-general-dev-1" bs-typeahead> </div> <div class="col-sm-12"> <button type="submit" class="btn btn-outline-secondary pull-right" ng-click="getStatus()">Submit</button> </div> </div> </form> <span ng-show="running"><i class="glyphicon glyphicon-refresh glyphicon-spin glyphicon-loading"></i> <text class="glyphicon-loading">Loading...</text> </span> <div class="results" ng-hide="serverStatus == null"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Host</div> </div> <div class="col-sm-10 tablevalue">{[{serverStatus.host}]}</div> </div> <div class="row"> <div class="col-sm-2"> <div class="tablekey">CPUs</div> </div> <div class="col-sm-10 tablevalue">{[{serverStatus.n_cpus}]}</div> </div> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Disk usage</div> </div> <div class="col-sm-10 tablevalue">{[{serverStatus.disk_used_pct}]}% used ({[{serverStatus.disk_used_g}]}G used of {[{serverStatus.disk_total_g}]}G total) {[{serverStatus.disk_available_g}]}G available </div> </div> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Memory usage</div> </div> <div class="col-sm-10 tablevalue">{[{serverStatus.memory_used_pct}]}% used ({[{serverStatus.memory_used_m}]}M used of {[{serverStatus.memory_total_m}]}M total) </div> </div> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Load (1, 5, 15 min)</div> </div> <div class="col-sm-10 tablevalue">{[{serverStatus.load_1m}]}, {[{serverStatus.load_5m}]}, {[{serverStatus.load_15m}]} </div> </div> </div> </div> '),e.put("views/hc_list.html",'<div class="container-fluid"> <form class="form-inline"> <div> <button type="submit" class="btn btn-outline-secondary" ng-click="refresh()">Refresh</button> <button type="submit" class="btn btn-outline-secondary" ng-click="ReSubmitJobs()">Re-submit jobs</button> <button type="submit" class="btn btn-outline-secondary" ng-click="deleteJobs()">Delete jobs</button> </div> <div class="input-group col-md-4"> <input type="text" class="form-control" placeholder="Search HC job" ng-model="searchHcJob"> <span class="input-group-append"> <button class="btn btn-outline-secondary" type="button"> <i class="fa fa-search"></i> </button> </span> </div> </form> <table class="table table-bordered table-striped"> <thead> <tr> <th scope="col" title="ID"> <a href="#!/hc_list" ng-click="sortType = \'id\'; sortReverse = !sortReverse"> ID <span ng-show="sortType == \'id\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'id\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Date"> <a href="#!/hc_list" ng-click="sortType = \'date\'; sortReverse = !sortReverse"> Date <span ng-show="sortType == \'date\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'date\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="DB"> <a href="#!/hc_list" ng-click="sortType = \'db\'; sortReverse = !sortReverse"> DB <span ng-show="sortType == \'db\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'db\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="HCs"> <a href="#!/hc_list" ng-click="sortType = \'hc\'; sortReverse = !sortReverse"> HCs <span ng-show="sortType == \'hc\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'hc\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Status"> <a href="#!/hc_list" ng-click="sortType = \'status\'; sortReverse = !sortReverse"> Status <span ng-show="sortType == \'status\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'status\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Tag"> <a href="#!/hc_list" ng-click="sortType = \'tag\'; sortReverse = !sortReverse"> Tag <span ng-show="sortType == \'tag\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'tag\' && sortReverse" class="fa fa-caret-up"></span> </a> </th> <th scope="col" title="Select"> <a href="#!/hc_list" ng-click="sortType = \'select\'; sortReverse = !sortReverse"> Select <span ng-show="sortType == \'select\' && !sortReverse" class="fa fa-caret-down"></span> <span ng-show="sortType == \'select\' && sortReverse" class="fa fa-caret-up"></span> </a> <input type="checkbox" ng-model="selectAll" ng-click="checkAll()"> </th> </tr> </thead> <tbody> <tr ng-repeat="job in jobs | orderBy:sortType:sortReverse | filter:searchHcJob"> <td><a href="#!/hc_result/{[{job.id}]}">{[{job.id}]}</a></td> <td>{[{job.input.timestamp * 1000 | date:\'dd-MM-yyyy HH:mm\'}]}</td> <td>{[{hidePassword(job.input.db_uri)}]}</td> <td> <span ng-repeat="name in job.input.hc_names">{[{name}]}<br></span> <span ng-repeat="name in job.input.hc_groups">{[{name}]}<br></span> </td> <td>{[{job.status}]}</td> <td>{[{job.input.tag}]}</td> <td><input type="checkbox" ng-model="job.Selected"></td> </tr> </tbody> </table> <span ng-show="running"> <span class="spinner-border spinner-grow-sm"></span> <text class="glyphicon-loading">Loading...</text> </span> </div> '),e.put("views/hc_result.html",'<div class="container-fluid"> <form> <div> <button type="submit" class="btn btn-outline-secondary" ng-click="refresh()">Refresh</button> <button type="submit" class="btn btn-outline-secondary" ng-click="EditReSubmitJob()">Edit and Re-submit jobs</button> <button type="submit" class="btn btn-outline-secondary" ng-click="deleteJob()">Delete job</button> <button type="submit" class="btn btn-outline-secondary" ng-click="toggle()">Only show failures</button> </div> </form> <form class="form-horizontal"> <div> <label class="control-label" for="job_id"> Job ID: </label> <input type="text" class="form-control" id="job_id" ng-model="jobId"> <button type="submit" class="btn btn-outline-secondary" ng-click="getResult()">View</button> </div> </form> <form> <span ng-show="running"><i class="glyphicon glyphicon-refresh glyphicon-spin glyphicon-loading"></i> <text class="glyphicon-loading">Loading...</text> </span> <div class="results" ng-hide="jobResult == null"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">DB:</div> </div> <div class="col-sm-10 tablevalue">{[{hidePassword(jobResult.input.db_uri)}]}</div> </div> <div class="row"> <div class="col-sm-2"> <div class="tablekey">HCs:</div> </div> <div class="col-sm-10 tablevalue"> <span ng-repeat="name in jobResult.input.hc_names">{[{name}]}<br></span> <span ng-repeat="name in jobResult.input.hc_groups">{[{name}]}<br></span> </div> </div> <div ng-hide="jobResult.output == null"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Completed on:</div> </div> <div class="col-sm-10 tablevalue {[{jobResult.when_completed}]}">{[{jobResult.when_completed}]} </div> </div> </div> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Job status:</div> </div> <div class="col-sm-10 tablevalue {[{jobResult.status}]}">{[{jobResult.status}]}</div> </div> <div ng-show="jobResult.status == \'incomplete\'"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Progress:</div> </div> <div class="col-sm-10 tablevalue progress"> <div class="bar" style="width:{[{((jobResult.progress.complete / jobResult.progress.total) * 100)}]}%"> <span class="job-completed">{[{jobResult.progress.complete}]}/{[{jobResult.progress.total}]} jobs complete</span> </div> </div> </div> </div> <div ng-show="jobResult.status == \'failed\'"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">HC jobs failed with following errors:</div> </div> <div class="col-sm-10 tablevalue"> <table class="table"> <tbody> <tr> <th scope="col" title="job_id">Job ID</th> <th scope="col" title="Message">Error message</th> </tr> <tr ng-repeat="(jobid, msg) in jobMsgs"> <td>{[{jobid}]}</td> <td>{[{msg}]}</td> </tr> </tbody> </table> </div> </div> </div> <div ng-hide="jobResult.output == null"> <div class="row"> <div class="col-sm-2"> <div class="tablekey">Overall HC result:</div> </div> <div class="col-sm-10 tablevalue {[{jobResult.output.status}]}">{[{jobResult.output.status}]}</div> </div> <div ng-hide="jobResult.output.results == null"> <div class="panel-group" role="tablist" aria-multiselectable="true" bs-collapse> <div class="panel panel-default" ng-repeat="(test,result) in jobResult.output.results" ng-hide="result.status==\'passed\' && Hide"> <div class="{[{result.status}]} panel-heading" role="tab"> <h4 class="panel-title"> {[{ test }]} : {[{result.status}]} <a bs-collapse-toggle ng-show="result.status==\'failed\'"> <span class="glyphicon glyphicon-plus"></span> </a> </h4> </div> <div class="panel-collapse" role="tabpanel" bs-collapse-target ng-show="result.status == \'failed\'"> <div class="panel-body"> <ul> <li ng-repeat="msg in result.messages track by $index"> {[{msg}]} </li> </ul> </div> </div> </div> </div> </div> </div> </div></form> </div>'),e.put("views/hc_submit.html",'<div class="container-fluid"> <form class="form-horizontal"> <div class="form-group"> <label class="col-sm-2 control-label" for="dbUri"> Test server URI: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="dbUri" ng-model="dbUri" bs-options="hidePassword(uri) for uri in getUris($viewValue)" placeholder="Enter URI, e.g: mysql://ensro@mysql-ens-general-dev-1:4484/" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="dbName"> Test database: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="dbName" ng-model="dbName" bs-options="dbName for dbName in getDbs($viewValue)" minlength="3" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="hcNames"> Healthcheck names: </label> <div class="col-sm-10"> <tags-input class="bootstrap" use-strings="true" add-on-paste="true" id="hcNames" ng-model="hcNames" placeholder="Healthcheck(s) to run"> <auto-complete source="getHcNames($query)"></auto-complete> </tags-input> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="hcGroups"> Healthcheck groups: </label> <div class="col-sm-10"> <tags-input class="bootstrap" use-strings="true" add-on-paste="true" id="hcGroups" ng-model="hcGroups" placeholder="Healthcheck group(s) to run"> <auto-complete source="getHcGroups($query)"></auto-complete> </tags-input> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="staging_uri"> Staging URI: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="staging_uri" ng-model="staging_uri" bs-options="hidePassword(dbName) for dbName in getUris($viewValue)" minlength="3" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="live_uri"> Live URI: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="live_uri" ng-model="live_uri" bs-options="hidePassword(dbName) for dbName in getUris($viewValue)" minlength="3" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="compara_uri"> Compara Master URI: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="compara_uri" ng-model="compara_uri" bs-options="hidePassword(dbName) for dbName in getUris($viewValue)" minlength="3" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="production_uri"> Production URI: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="production_uri" ng-model="production_uri" bs-options="hidePassword(dbName) for dbName in getUris($viewValue)" minlength="3" bs-typeahead> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="data_files_path"> Data files path: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="data_files_path" ng-model="data_files_path" minlength="3"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="tag"> Tag: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="tag" ng-model="tag" minlength="3"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label" for="email"> Email: </label> <div class="col-sm-10"> <input type="text" class="form-control" id="email" ng-model="email" minlength="10"> </div> </div> <div class="form-group row"> <div class="col-sm-2"> <div class="form-check"> <input class="form-check-input" type="checkbox" id="keepValues" ng-model="keepValues"> <label class="form-check-label" for="keeValues">Submit more</label> </div> </div> </div> <div class="form-group row"> <div class="col-sm-pull-10"> <button type="submit" class="btn btn-outline-secondary pull-right" ng-click="submitJob()">Submit</button> </div> </div> </form> </div> '),e.put("views/help.html",'<div class="container-fluid"> <h4>Reporting bug or suggest improvements:</h4> <ul> <li><p>Any issue, Please email the ensembl production team or submit a <a href="https://www.ebi.ac.uk/panda/jira/secure/CreateIssue!default.jspa">JIRA ticket</a></p></li> </ul> <h4>Production self service guide:</h4> <ul> <li><p>Read the Production self service guide <a href="https://github.com/Ensembl/ensembl-prodinf-web/blob/master/Production_service_interface_guide.pdf">here</a> </p></li> </ul> <h4>Healthcheck bulk submission:</h4> <ul> <li><p>This can be used to submit one or more healthcheck job(s) using the REST endpoint directly. Please read documentation <a href="https://github.com/Ensembl/ensembl-prodinf-core/blob/master/docs/bulk_hc_submission.rst">here</a> </p></li> </ul> <h4>Database bulk copy:</h4> <ul> <li><p>This can be used to copy one or more databases using the REST endpoint directly. Please read documentation <a href="https://github.com/Ensembl/ensembl-prodinf-core/blob/master/docs/bulk_db_copy.rst">here</a> </p></li> </ul> <h4>Database bulk Handover:</h4> <ul> <li><p>This can be used to handover one or more databases using the REST endpoint directly. Please read documentation <a href="https://github.com/Ensembl/ensembl-prodinf-core/blob/master/docs/bulk_handover_database.rst">here</a> </p></li> </ul> <h4>Healthcheck, database copy, metadata and handover endpoints:</h4> <ul> <li><p><a href="hc/">Healthcheck endpoint</a></p></li> <li><p><a href="dbcopy/">Database copy endpoint</a></p></li> <li><p><a href="metadata/">Metadata endpoint</a></p></li> <li><p><a href="handover/">Handover endpoint</a></p></li> </ul> <h4>Healthcheck, database copy, metadata and handover endpoints endpoints documentation:</h4> <ul> <li><p><a href="hc/apidocs">Healthcheck endpoint documentation</a></p></li> <li><p><a href="dbcopy/apidocs">Database copy endpoint documentation</a></p></li> <li><p><a href="metadata/apidocs">Metadata endpoint documentation</a></p></li> <li><p><a href="handover/apidocs">Handover endpoint documentation</a></p></li> </ul> </div>'),e.put("views/homepage.html",'<div class="container-fluid"> <h2 class="h2-homepage"> Welcome to the {[{websiteName}]} {[{app_path}]}</h2> </div> <div class="container-fluid"> <div class="card"> <div class="card-header" data-toggle="collapse" data-target="#collapse_hc"> Healthcheck </div> <div id="collapse_hc" class="card-body collapse"> <ul class="list-group"> <li class="list-group-item"><a href="#!hc_submit">Submit HC job</a></li> <li class="list-group-item"><a href="#!hc_list">List HC jobs</a></li> <li class="list-group-item"><a href="#!hc_result">View HC job</a></li> </ul> </div> </div> <div class="card"> <div class="card-header" data-toggle="collapse" data-target="#collapse_copy">Database copy</div> <div id="collapse_copy" class="card-body collapse"> <ul class="list-group"> <li class="list-group-item"><a href="#!copy_submit">Submit copy job</a></li> <li class="list-group-item"><a href="#!copy_list">List copy jobs</a></li> <li class="list-group-item"><a href="#!copy_result">View copy job</a></li> </ul> </div> </div> <div class="card"> <div class="card-header" data-toggle="collapse" data-target="#collapse_database_handover">Database handover </div> <div id="collapse_database_handover" class="card-body collapse"> <ul class="list-group"> <li class="list-group-item"><a href="#!database_handover_submit">Handover a database</a></li> <li class="list-group-item"><a href="#!database_handover_list">List Handover database jobs</a></li> <li class="list-group-item"><a href="#!database_handover_result">View handover database detail</a> </li> </ul> </div> </div> <div class="card"> <div class="card-header" data-toggle="collapse" data-target="#collapse_database_server_monitor">Database server monitor </div> <div id="collapse_database_server_monitor" class="card-body collapse"> <ul class="list-group"> <li class="list-group-item"><a href="#!database_server_status">Database server status</a></li> <li class="list-group-item"><a href="#!database_server_size">Database size</a></li> </ul> </div> </div> <div class="card"> <a href="#!help" class="card-header">Get Help</a> </div> </div>')}]);