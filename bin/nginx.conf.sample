worker_processes 1;

# 'user nobody nobody;' for systems with 'nobody' as a group instead
pid nginx.pid;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
}

http {
    include mime.types;
    # fallback in case we can't determine a type
    # default_type application/octet-stream;
    error_log error.log error;
    access_log access.log combined;
    # sendfile on;

    upstream app_server {
        server 127.0.0.1:2000 fail_timeout=0;
    }

    server {
        # use 'listen 80 deferred;' for Linux
        listen 80;
        client_max_body_size 128M;
        server_name production-services.ensembl.local
        keepalive_timeout 5;

        # path for static files
        location /static/ {
            alias /home/marc/work_local/ensembl_production_services/staticfiles/;
        }

        # Vertebrates reverse proxy REST entry points
        location /api/vertebrates/ho/ {
            proxy_pass http://host:port/;
            # proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/vertebrates/hc/ {
            proxy_pass http://host:port/;      # proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/vertebrates/db/ {
            proxy_pass http://host:port/;            # proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        # END Vertebrates

        location / {
            # checks for static file, if not found proxy to app
            try_files $uri @proxy_to_app;
        }

        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://app_server;

        }
    }
}
